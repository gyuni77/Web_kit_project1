package com.example.todo.controller;



@CrossOrigin(origins = "*") 
@Slf4j
@RestController 
@RequestMapping("/auth")
public class UserController {
	@Autowired
	private UserService userService;
	@Autowired
	private TokenProvider tokenProvider;
	
	@PostMapping("/signup")
	public ResponseEntity<?>registerUser(@RequestBody UserDTO userDTO){
	try {
	UserEntity user= UserEntity.builder() 
			.email(userDTO.getEmail()) 
			.username(userDTO.getUsername()) 
			.password(userDTO.getPassword()) 
			.build();
	UserEntity registeredUser = userService.create(user);
	UserDTO responseUserDTO = userDTO.builder() 
			.email(registeredUser.getEmail())
			.id(registeredUser.getId()) 
			.username(registeredUser.getUsername()) 
			.build();
	return ResponseEntity.ok().body(responseUserDTO);
	}catch(Exception e) {
		ResponseDTO responseDTO =ResponseDTO.builder().error(e.getMessage()).build();
		return ResponseEntity.badRequest().body(responseDTO);
	}
	}
	@PostMapping("/signin")
	public ResponseEntity<?>authenticate(@RequestBody UserDTO userDTO){
		UserEntity user = userService.getByCredentials(userDTO.getEmail(), userDTO.getPassword());

		if(user !=null){
			final String token = tokenProvider.create(user);
			final UserDTO responseUserDTO = UserDTO.builder()
			.email(user.getEmail()) .id(user.getId()) .token(token)
			.build();
			return ResponseEntity.ok().body(responseUserDTO);
		}else {ResponseDTO responseDTO = ResponseDTO.builder() .error("Login failed")
				.build();
		return ResponseEntity.badRequest().body(responseDTO);
		}
	}
	
	}
